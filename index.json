{
  "api/Downlink.Infrastructure.html": {
    "href": "api/Downlink.Infrastructure.html",
    "title": "Namespace Downlink.Infrastructure | Downlink",
    "keywords": "Namespace Downlink.Infrastructure Classes ConfigurationExtensions HttpClientExtensions"
  },
  "api/Downlink.S3.S3FileSource.html": {
    "href": "api/Downlink.S3.S3FileSource.html",
    "title": "Class S3FileSource | Downlink",
    "keywords": "Class S3FileSource Inheritance System.Object S3FileSource Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Downlink.S3 Assembly : Downlink.S3.dll Syntax public class S3FileSource : IFileSource Properties | Improve this Doc View Source Available Declaration public bool Available { get; } Property Value Type Description System.Boolean Implements IFileSource.Available | Improve this Doc View Source FileUri Declaration public Uri FileUri { get; } Property Value Type Description System.Uri Implements IFileSource.FileUri | Improve this Doc View Source Metadata Declaration public FileMetadata Metadata { get; } Property Value Type Description FileMetadata Implements IFileSource.Metadata | Improve this Doc View Source Version Declaration public VersionSpec Version { get; set; } Property Value Type Description VersionSpec Implements IFileSource.Version"
  },
  "api/Downlink.S3.S3FileStorageFactory.html": {
    "href": "api/Downlink.S3.S3FileStorageFactory.html",
    "title": "Class S3FileStorageFactory | Downlink",
    "keywords": "Class S3FileStorageFactory Inheritance System.Object S3FileStorageFactory Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Downlink.S3 Assembly : Downlink.S3.dll Syntax public static class S3FileStorageFactory Methods | Improve this Doc View Source BuildS3FileStorage(IServiceProvider) Declaration public static IRemoteStorage BuildS3FileStorage(IServiceProvider provider) Parameters Type Name Description System.IServiceProvider provider Returns Type Description IRemoteStorage"
  },
  "api/Downlink.StartupExtensions.html": {
    "href": "api/Downlink.StartupExtensions.html",
    "title": "Class StartupExtensions | Downlink",
    "keywords": "Class StartupExtensions Inheritance System.Object StartupExtensions Namespace : Downlink Assembly : Downlink.dll Syntax public static class StartupExtensions : object Methods | Improve this Doc View Source AddFormatterMappings(MvcOptions) Declaration public static MvcOptions AddFormatterMappings(this MvcOptions opts) Parameters Type Name Description MvcOptions opts Returns Type Description MvcOptions | Improve this Doc View Source AddMediatR(IServiceCollection) Declaration public static IServiceCollection AddMediatR(this IServiceCollection services) Parameters Type Name Description IServiceCollection services Returns Type Description IServiceCollection | Improve this Doc View Source AddMvcServices(IServiceCollection) Declaration public static IServiceCollection AddMvcServices(this IServiceCollection services) Parameters Type Name Description IServiceCollection services Returns Type Description IServiceCollection | Improve this Doc View Source AddStorageBackend(IServiceCollection, IConfiguration) Declaration public static IServiceCollection AddStorageBackend(this IServiceCollection services, IConfiguration config) Parameters Type Name Description IServiceCollection services IConfiguration config Returns Type Description IServiceCollection | Improve this Doc View Source UseCorsPolicy(IApplicationBuilder) Declaration public static IApplicationBuilder UseCorsPolicy(this IApplicationBuilder app) Parameters Type Name Description IApplicationBuilder app Returns Type Description IApplicationBuilder"
  },
  "api/Downlink.Storage.LocalFileSource.html": {
    "href": "api/Downlink.Storage.LocalFileSource.html",
    "title": "Class LocalFileSource | Downlink",
    "keywords": "Class LocalFileSource Inheritance System.Object LocalFileSource Namespace : Downlink.Storage Assembly : Downlink.dll Syntax public class LocalFileSource : object, IFileSource Constructors | Improve this Doc View Source LocalFileSource(VersionSpec, FileInfo) Declaration public LocalFileSource(VersionSpec version, FileInfo fileInfo) Parameters Type Name Description VersionSpec version FileInfo fileInfo Properties | Improve this Doc View Source Available Declaration public bool Available { get; } Property Value Type Description System.Boolean Implements IFileSource.Available | Improve this Doc View Source FileUri Declaration public Uri FileUri { get; } Property Value Type Description Uri | Improve this Doc View Source Metadata Declaration public FileMetadata Metadata { get; set; } Property Value Type Description FileMetadata Implements IFileSource.Metadata | Improve this Doc View Source Version Declaration public VersionSpec Version { get; } Property Value Type Description VersionSpec Implements IFileSource.Version"
  },
  "api/Downlink.AzureStorage.AzureStorageExtensions.html": {
    "href": "api/Downlink.AzureStorage.AzureStorageExtensions.html",
    "title": "Class AzureStorageExtensions | Downlink",
    "keywords": "Class AzureStorageExtensions Inheritance System.Object AzureStorageExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Downlink.AzureStorage Assembly : Downlink.AzureStorage.dll Syntax public static class AzureStorageExtensions Methods | Improve this Doc View Source ListBlobsAsync(CloudBlobContainer) Declaration public static Task<List<IListBlobItem>> ListBlobsAsync(this CloudBlobContainer container) Parameters Type Name Description Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer container Returns Type Description System.Threading.Tasks.Task<System.Collections.Generic.List<Microsoft.WindowsAzure.Storage.Blob.IListBlobItem>> | Improve this Doc View Source PrepContainer(CloudBlobContainer) Declaration public static Task PrepContainer(this CloudBlobContainer container) Parameters Type Name Description Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer container Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source ToSource(CloudBlockBlob, VersionSpec) Declaration public static IFileSource ToSource(this CloudBlockBlob blob, VersionSpec version) Parameters Type Name Description Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob blob VersionSpec version Returns Type Description IFileSource | Improve this Doc View Source ToSourceAsync(CloudBlockBlob, VersionSpec) Declaration public static Task<IFileSource> ToSourceAsync(this CloudBlockBlob blob, VersionSpec version) Parameters Type Name Description Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob blob VersionSpec version Returns Type Description System.Threading.Tasks.Task<Downlink.Core.IFileSource>"
  },
  "api/Downlink.AzureStorage.Strategies.AzureMatchStrategy.html": {
    "href": "api/Downlink.AzureStorage.Strategies.AzureMatchStrategy.html",
    "title": "Class AzureMatchStrategy | Downlink",
    "keywords": "Class AzureMatchStrategy Inheritance System.Object AzureMatchStrategy Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Downlink.AzureStorage.Strategies Assembly : Downlink.AzureStorage.dll Syntax public abstract class AzureMatchStrategy : IMatchStrategy<IListBlobItem> Constructors | Improve this Doc View Source AzureMatchStrategy(String) Declaration protected AzureMatchStrategy(string name) Parameters Type Name Description System.String name Properties | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description System.String Implements IMatchStrategy<TObject>.Name Methods | Improve this Doc View Source MatchAsync(IEnumerable<IListBlobItem>, VersionSpec) Declaration public abstract Task<IFileSource> MatchAsync(IEnumerable<IListBlobItem> items, VersionSpec version) Parameters Type Name Description System.Collections.Generic.IEnumerable<Microsoft.WindowsAzure.Storage.Blob.IListBlobItem> items VersionSpec version Returns Type Description System.Threading.Tasks.Task<Downlink.Core.IFileSource> Implements IMatchStrategy<TObject>.MatchAsync(IEnumerable<TObject>, VersionSpec)"
  },
  "api/Downlink.Controllers.DownlinkController.html": {
    "href": "api/Downlink.Controllers.DownlinkController.html",
    "title": "Class DownlinkController | Downlink",
    "keywords": "Class DownlinkController Inheritance System.Object ApiController DownlinkController Inherited Members ApiController.Mediator ApiController.Gone() Namespace : Downlink.Controllers Assembly : Downlink.dll Syntax public class DownlinkController : ApiController Constructors | Improve this Doc View Source DownlinkController(IConfiguration, MediatR.IMediator, IResponseHandler, ILogger<DownlinkController>) Declaration public DownlinkController(IConfiguration config, MediatR.IMediator mediator, IResponseHandler handler, ILogger<DownlinkController> logger) Parameters Type Name Description IConfiguration config MediatR.IMediator mediator IResponseHandler handler ILogger<Downlink.Controllers.DownlinkController> logger Properties | Improve this Doc View Source Handler Declaration public IResponseHandler Handler { get; } Property Value Type Description IResponseHandler Methods | Improve this Doc View Source AddArtifact(String, String, String, String, IEnumerable<IFormFile>) Declaration public IActionResult AddArtifact(string version, string platform, string arch, string format, IEnumerable<IFormFile> files) Parameters Type Name Description System.String version System.String platform System.String arch System.String format IEnumerable<IFormFile> files Returns Type Description IActionResult | Improve this Doc View Source GetDownloadAsync(String, String, String, String) Declaration public Task<IActionResult> GetDownloadAsync(string version, string platform, string arch, string format) Parameters Type Name Description System.String version System.String platform System.String arch System.String format Returns Type Description Task<IActionResult> | Improve this Doc View Source GetInfo() Declaration public IActionResult GetInfo() Returns Type Description IActionResult"
  },
  "api/Downlink.Core.Diagnostics.VersionNotFoundException.html": {
    "href": "api/Downlink.Core.Diagnostics.VersionNotFoundException.html",
    "title": "Class VersionNotFoundException | Downlink",
    "keywords": "Class VersionNotFoundException Inheritance System.Object System.Exception NotFoundException VersionNotFoundException Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Downlink.Core.Diagnostics Assembly : Downlink.Core.dll Syntax public class VersionNotFoundException : NotFoundException Constructors | Improve this Doc View Source VersionNotFoundException() Declaration public VersionNotFoundException() | Improve this Doc View Source VersionNotFoundException(String) Declaration public VersionNotFoundException(string message) Parameters Type Name Description System.String message | Improve this Doc View Source VersionNotFoundException(String, Exception) Declaration public VersionNotFoundException(string message, Exception inner) Parameters Type Name Description System.String message System.Exception inner"
  },
  "api/Downlink.Core.IMatchStrategy-1.html": {
    "href": "api/Downlink.Core.IMatchStrategy-1.html",
    "title": "Interface IMatchStrategy<TObject> | Downlink",
    "keywords": "Interface IMatchStrategy<TObject> Namespace : Downlink.Core Assembly : Downlink.Core.dll Syntax public interface IMatchStrategy<TObject> where TObject : class Type Parameters Name Description TObject Properties | Improve this Doc View Source Name Declaration string Name { get; } Property Value Type Description System.String Methods | Improve this Doc View Source MatchAsync(IEnumerable<TObject>, VersionSpec) Declaration Task<IFileSource> MatchAsync(IEnumerable<TObject> items, VersionSpec version) Parameters Type Name Description System.Collections.Generic.IEnumerable<TObject> items VersionSpec version Returns Type Description System.Threading.Tasks.Task<Downlink.Core.IFileSource>"
  },
  "api/Downlink.Core.IRemoteStorage.html": {
    "href": "api/Downlink.Core.IRemoteStorage.html",
    "title": "Interface IRemoteStorage | Downlink",
    "keywords": "Interface IRemoteStorage Namespace : Downlink.Core Assembly : Downlink.Core.dll Syntax public interface IRemoteStorage Methods | Improve this Doc View Source GetFileAsync(VersionSpec) Declaration Task<IFileSource> GetFileAsync(VersionSpec version) Parameters Type Name Description VersionSpec version Returns Type Description System.Threading.Tasks.Task<Downlink.Core.IFileSource>"
  },
  "api/Downlink.Core.Runtime.html": {
    "href": "api/Downlink.Core.Runtime.html",
    "title": "Namespace Downlink.Core.Runtime | Downlink",
    "keywords": "Namespace Downlink.Core.Runtime Classes FlatPatternMatcher HierarchicalPatternMatcher"
  },
  "api/Downlink.GitHub.CredentialFactory.html": {
    "href": "api/Downlink.GitHub.CredentialFactory.html",
    "title": "Class CredentialFactory | Downlink",
    "keywords": "Class CredentialFactory Inheritance System.Object CredentialFactory Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Downlink.GitHub Assembly : Downlink.GitHub.dll Syntax public static class CredentialFactory Methods | Improve this Doc View Source BuildCredentials(IServiceProvider) Declaration public static GitHubCredentials BuildCredentials(IServiceProvider provider) Parameters Type Name Description System.IServiceProvider provider Returns Type Description GitHubCredentials"
  },
  "api/Downlink.GitHub.IGitHubClient.html": {
    "href": "api/Downlink.GitHub.IGitHubClient.html",
    "title": "Interface IGitHubClient | Downlink",
    "keywords": "Interface IGitHubClient Inherited Members IRemoteStorage.GetFileAsync(VersionSpec) Namespace : Downlink.GitHub Assembly : Downlink.GitHub.dll Syntax public interface IGitHubClient : IRemoteStorage"
  },
  "api/Downlink.GitHub.OctokitClient.html": {
    "href": "api/Downlink.GitHub.OctokitClient.html",
    "title": "Class OctokitClient | Downlink",
    "keywords": "Class OctokitClient Inheritance System.Object OctokitClient Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Downlink.GitHub Assembly : Downlink.GitHub.dll Syntax public class OctokitClient : IGitHubClient, IRemoteStorage Constructors | Improve this Doc View Source OctokitClient(GitHubCredentials, IConfiguration, IEnumerable<GitHubMatchStrategy>, IEnumerable<IPatternMatcher>) Declaration public OctokitClient(GitHubCredentials credentials, IConfiguration configuration, IEnumerable<GitHubMatchStrategy> matchStrategies, IEnumerable<IPatternMatcher> patternMatchers) Parameters Type Name Description GitHubCredentials credentials Microsoft.Extensions.Configuration.IConfiguration configuration System.Collections.Generic.IEnumerable<Downlink.GitHub.GitHubMatchStrategy> matchStrategies System.Collections.Generic.IEnumerable<Downlink.Core.IPatternMatcher> patternMatchers Properties | Improve this Doc View Source Client Declaration public GitHubClient Client { get; } Property Value Type Description GitHubClient Methods | Improve this Doc View Source GetAllVersions() Declaration public Task<IEnumerable<VersionSpec>> GetAllVersions() Returns Type Description System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<Downlink.Core.VersionSpec>> | Improve this Doc View Source GetFileAsync(VersionSpec) Declaration public Task<IFileSource> GetFileAsync(VersionSpec version) Parameters Type Name Description VersionSpec version Returns Type Description System.Threading.Tasks.Task<Downlink.Core.IFileSource> Implements IRemoteStorage.GetFileAsync(VersionSpec)"
  },
  "api/Downlink.GitHub.GitHubCredentials.html": {
    "href": "api/Downlink.GitHub.GitHubCredentials.html",
    "title": "Class GitHubCredentials | Downlink",
    "keywords": "Class GitHubCredentials Inheritance System.Object GitHubCredentials Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Downlink.GitHub Assembly : Downlink.GitHub.dll Syntax public class GitHubCredentials Constructors | Improve this Doc View Source GitHubCredentials(String, String) Declaration public GitHubCredentials(string apiToken, string repoId) Parameters Type Name Description System.String apiToken System.String repoId Properties | Improve this Doc View Source Owner Declaration public string Owner { get; } Property Value Type Description System.String | Improve this Doc View Source Repo Declaration public string Repo { get; } Property Value Type Description System.String | Improve this Doc View Source Token Declaration public string Token { get; } Property Value Type Description System.String"
  },
  "api/Downlink.Handlers.FileSchemeClient.html": {
    "href": "api/Downlink.Handlers.FileSchemeClient.html",
    "title": "Class FileSchemeClient | Downlink",
    "keywords": "Class FileSchemeClient Inheritance System.Object SchemeClient FileSchemeClient Inherited Members SchemeClient.Schemes Namespace : Downlink.Handlers Assembly : Downlink.dll Syntax public class FileSchemeClient : SchemeClient, ISchemeClient Constructors | Improve this Doc View Source FileSchemeClient() Declaration public FileSchemeClient() Methods | Improve this Doc View Source GetContentAsync(IFileSource) Declaration public override Task<IActionResult> GetContentAsync(IFileSource file) Parameters Type Name Description IFileSource file Returns Type Description Task<IActionResult> Overrides SchemeClient.GetContentAsync(IFileSource)"
  },
  "api/Downlink.Handlers.HttpDownloadClient.html": {
    "href": "api/Downlink.Handlers.HttpDownloadClient.html",
    "title": "Class HttpDownloadClient | Downlink",
    "keywords": "Class HttpDownloadClient Inheritance System.Object SchemeClient HttpDownloadClient Inherited Members SchemeClient.Schemes Namespace : Downlink.Handlers Assembly : Downlink.dll Syntax public class HttpDownloadClient : SchemeClient, ISchemeClient Constructors | Improve this Doc View Source HttpDownloadClient(ILogger<HttpDownloadClient>) Declaration public HttpDownloadClient(ILogger<HttpDownloadClient> logger) Parameters Type Name Description ILogger<Downlink.Handlers.HttpDownloadClient> logger Properties | Improve this Doc View Source DownloadLocation Declaration public string DownloadLocation { get; } Property Value Type Description System.String Methods | Improve this Doc View Source GetContentAsync(IFileSource) Declaration public override Task<IActionResult> GetContentAsync(IFileSource file) Parameters Type Name Description IFileSource file Returns Type Description Task<IActionResult> Overrides SchemeClient.GetContentAsync(IFileSource)"
  },
  "api/Downlink.Handlers.html": {
    "href": "api/Downlink.Handlers.html",
    "title": "Namespace Downlink.Handlers | Downlink",
    "keywords": "Namespace Downlink.Handlers Classes FileSchemeClient HttpDownloadClient ProxyingResponseHandler RedirectingResponseHandler ResponseHandler SchemeClient Interfaces IResponseHandler ISchemeClient This interface is intended as an extension point to support storage backends that return unsupported URI schemes."
  },
  "api/Downlink.Infrastructure.ConfigurationExtensions.html": {
    "href": "api/Downlink.Infrastructure.ConfigurationExtensions.html",
    "title": "Class ConfigurationExtensions | Downlink",
    "keywords": "Class ConfigurationExtensions Inheritance System.Object ConfigurationExtensions Namespace : Downlink.Infrastructure Assembly : Downlink.dll Syntax public static class ConfigurationExtensions : object Methods | Improve this Doc View Source Get<T>(IConfiguration, String) Declaration public static T Get<T>(this IConfiguration config, string key)where T : new () Parameters Type Name Description IConfiguration config System.String key Returns Type Description T Type Parameters Name Description T"
  },
  "api/Downlink.Program.html": {
    "href": "api/Downlink.Program.html",
    "title": "Class Program | Downlink",
    "keywords": "Class Program Inheritance System.Object Program Namespace : Downlink Assembly : Downlink.dll Syntax public class Program : object Methods | Improve this Doc View Source BuildWebHost(String[]) Declaration public static IWebHost BuildWebHost(string[] args) Parameters Type Name Description System.String[] args Returns Type Description IWebHost | Improve this Doc View Source Main(String[]) Declaration public static void Main(string[] args) Parameters Type Name Description System.String[] args"
  },
  "api/Downlink.S3.S3Configuration.html": {
    "href": "api/Downlink.S3.S3Configuration.html",
    "title": "Class S3Configuration | Downlink",
    "keywords": "Class S3Configuration Inheritance System.Object S3Configuration Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Downlink.S3 Assembly : Downlink.S3.dll Syntax public class S3Configuration"
  },
  "api/Downlink.S3.html": {
    "href": "api/Downlink.S3.html",
    "title": "Namespace Downlink.S3 | Downlink",
    "keywords": "Namespace Downlink.S3 Classes S3Configuration S3FileSource S3FileStorageFactory S3MatchStrategy S3SearchStorage S3Storage ServiceCollectionExtensions"
  },
  "api/Downlink.Startup.html": {
    "href": "api/Downlink.Startup.html",
    "title": "Class Startup | Downlink",
    "keywords": "Class Startup Inheritance System.Object Startup Namespace : Downlink Assembly : Downlink.dll Syntax public class Startup : object Constructors | Improve this Doc View Source Startup(IConfiguration) Declaration public Startup(IConfiguration configuration) Parameters Type Name Description IConfiguration configuration Properties | Improve this Doc View Source Configuration Declaration public IConfiguration Configuration { get; } Property Value Type Description IConfiguration Methods | Improve this Doc View Source Configure(IApplicationBuilder, IHostingEnvironment, ILoggerFactory) Declaration public void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory) Parameters Type Name Description IApplicationBuilder app IHostingEnvironment env ILoggerFactory loggerFactory | Improve this Doc View Source ConfigureServices(IServiceCollection) Declaration public void ConfigureServices(IServiceCollection services) Parameters Type Name Description IServiceCollection services"
  },
  "api/Downlink.html": {
    "href": "api/Downlink.html",
    "title": "Namespace Downlink | Downlink",
    "keywords": "Namespace Downlink Classes BuilderExtensions Program Startup StartupExtensions"
  },
  "api/Downlink.AzureStorage.AzureStorageFileSource.html": {
    "href": "api/Downlink.AzureStorage.AzureStorageFileSource.html",
    "title": "Class AzureStorageFileSource | Downlink",
    "keywords": "Class AzureStorageFileSource Inheritance System.Object AzureStorageFileSource Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Downlink.AzureStorage Assembly : Downlink.AzureStorage.dll Syntax public class AzureStorageFileSource : IFileSource Properties | Improve this Doc View Source Available Declaration public bool Available { get; } Property Value Type Description System.Boolean Implements IFileSource.Available | Improve this Doc View Source FileUri Declaration public Uri FileUri { get; } Property Value Type Description System.Uri Implements IFileSource.FileUri | Improve this Doc View Source Metadata Declaration public FileMetadata Metadata { get; } Property Value Type Description FileMetadata Implements IFileSource.Metadata | Improve this Doc View Source Version Declaration public VersionSpec Version { get; set; } Property Value Type Description VersionSpec Implements IFileSource.Version"
  },
  "api/Downlink.AzureStorage.html": {
    "href": "api/Downlink.AzureStorage.html",
    "title": "Namespace Downlink.AzureStorage | Downlink",
    "keywords": "Namespace Downlink.AzureStorage Classes AzureStorage AzureStorageExtensions AzureStorageFileSource ServiceCollectionExtensions"
  },
  "api/Downlink.Controllers.html": {
    "href": "api/Downlink.Controllers.html",
    "title": "Namespace Downlink.Controllers | Downlink",
    "keywords": "Namespace Downlink.Controllers Classes ApiController ApiController.GoneResult DownlinkController"
  },
  "api/Downlink.Core.Diagnostics.PlatformNotFoundException.html": {
    "href": "api/Downlink.Core.Diagnostics.PlatformNotFoundException.html",
    "title": "Class PlatformNotFoundException | Downlink",
    "keywords": "Class PlatformNotFoundException Inheritance System.Object System.Exception NotFoundException PlatformNotFoundException Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Downlink.Core.Diagnostics Assembly : Downlink.Core.dll Syntax public class PlatformNotFoundException : NotFoundException Constructors | Improve this Doc View Source PlatformNotFoundException() Declaration public PlatformNotFoundException() | Improve this Doc View Source PlatformNotFoundException(Serialization.SerializationInfo, Serialization.StreamingContext) Declaration protected PlatformNotFoundException(Serialization.SerializationInfo info, Serialization.StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info System.Runtime.Serialization.StreamingContext context | Improve this Doc View Source PlatformNotFoundException(String) Declaration public PlatformNotFoundException(string message) Parameters Type Name Description System.String message | Improve this Doc View Source PlatformNotFoundException(String, Exception) Declaration public PlatformNotFoundException(string message, Exception inner) Parameters Type Name Description System.String message System.Exception inner"
  },
  "api/Downlink.Core.FileMetadata.html": {
    "href": "api/Downlink.Core.FileMetadata.html",
    "title": "Class FileMetadata | Downlink",
    "keywords": "Class FileMetadata Inheritance System.Object FileMetadata Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Downlink.Core Assembly : Downlink.Core.dll Syntax public class FileMetadata Constructors | Improve this Doc View Source FileMetadata(Double, String) Declaration public FileMetadata(double sizeinBytes, string fileName) Parameters Type Name Description System.Double sizeinBytes System.String fileName Properties | Improve this Doc View Source FileName Declaration public string FileName { get; } Property Value Type Description System.String | Improve this Doc View Source Public Declaration public bool Public { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source SizeInBytes Declaration public double SizeInBytes { get; } Property Value Type Description System.Double"
  },
  "api/Downlink.Handlers.IResponseHandler.html": {
    "href": "api/Downlink.Handlers.IResponseHandler.html",
    "title": "Interface IResponseHandler | Downlink",
    "keywords": "Interface IResponseHandler Namespace : Downlink.Handlers Assembly : Downlink.dll Syntax public interface IResponseHandler Methods | Improve this Doc View Source HandleAsync(IFileSource) Declaration Task<IActionResult> HandleAsync(IFileSource file) Parameters Type Name Description IFileSource file Returns Type Description Task<IActionResult>"
  },
  "api/Downlink.Handlers.ISchemeClient.html": {
    "href": "api/Downlink.Handlers.ISchemeClient.html",
    "title": "Interface ISchemeClient | Downlink",
    "keywords": "Interface ISchemeClient This interface is intended as an extension point to support storage backends that return unsupported URI schemes. Namespace : Downlink.Handlers Assembly : Downlink.dll Syntax public interface ISchemeClient Properties | Improve this Doc View Source Schemes Declaration IEnumerable<string> Schemes { get; } Property Value Type Description IEnumerable<System.String> Methods | Improve this Doc View Source GetContentAsync(IFileSource) Declaration Task<IActionResult> GetContentAsync(IFileSource file) Parameters Type Name Description IFileSource file Returns Type Description Task<IActionResult>"
  },
  "api/Downlink.Messaging.AppVersionRequest.html": {
    "href": "api/Downlink.Messaging.AppVersionRequest.html",
    "title": "Class AppVersionRequest | Downlink",
    "keywords": "Class AppVersionRequest Inheritance System.Object AppVersionRequest Namespace : Downlink.Messaging Assembly : Downlink.dll Syntax public class AppVersionRequest : IRequest<AppVersionResponseModel> Constructors | Improve this Doc View Source AppVersionRequest(VersionSpec, String) Declaration public AppVersionRequest(VersionSpec version, string format = null) Parameters Type Name Description VersionSpec version System.String format Properties | Improve this Doc View Source Format Declaration public string Format { get; } Property Value Type Description System.String | Improve this Doc View Source Version Declaration public VersionSpec Version { get; } Property Value Type Description VersionSpec"
  },
  "api/Downlink.Messaging.AppVersionRequestHandler.html": {
    "href": "api/Downlink.Messaging.AppVersionRequestHandler.html",
    "title": "Class AppVersionRequestHandler | Downlink",
    "keywords": "Class AppVersionRequestHandler Inheritance System.Object AppVersionRequestHandler Namespace : Downlink.Messaging Assembly : Downlink.dll Syntax public class AppVersionRequestHandler : IAsyncRequestHandler<AppVersionRequest, AppVersionResponseModel> Constructors | Improve this Doc View Source AppVersionRequestHandler(IRemoteStorage) Declaration public AppVersionRequestHandler(IRemoteStorage storage) Parameters Type Name Description IRemoteStorage storage Methods | Improve this Doc View Source Handle(AppVersionRequest) Declaration public Task<AppVersionResponseModel> Handle(AppVersionRequest message) Parameters Type Name Description AppVersionRequest message Returns Type Description Task<Downlink.Messaging.AppVersionResponseModel>"
  },
  "api/Downlink.S3.S3MatchStrategy.html": {
    "href": "api/Downlink.S3.S3MatchStrategy.html",
    "title": "Class S3MatchStrategy | Downlink",
    "keywords": "Class S3MatchStrategy Inheritance System.Object S3MatchStrategy Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Downlink.S3 Assembly : Downlink.S3.dll Syntax public abstract class S3MatchStrategy : IMatchStrategy<S3Object> Constructors | Improve this Doc View Source S3MatchStrategy(String) Declaration protected S3MatchStrategy(string name) Parameters Type Name Description System.String name Properties | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description System.String Implements IMatchStrategy<TObject>.Name Methods | Improve this Doc View Source MatchAsync(IEnumerable<S3Object>, VersionSpec) Declaration public abstract Task<IFileSource> MatchAsync(IEnumerable<S3Object> items, VersionSpec version) Parameters Type Name Description System.Collections.Generic.IEnumerable<Amazon.S3.Model.S3Object> items VersionSpec version Returns Type Description System.Threading.Tasks.Task<Downlink.Core.IFileSource> Implements IMatchStrategy<TObject>.MatchAsync(IEnumerable<TObject>, VersionSpec)"
  },
  "api/Downlink.S3.S3SearchStorage.html": {
    "href": "api/Downlink.S3.S3SearchStorage.html",
    "title": "Class S3SearchStorage | Downlink",
    "keywords": "Class S3SearchStorage Inheritance System.Object S3SearchStorage Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Downlink.S3 Assembly : Downlink.S3.dll Syntax public class S3SearchStorage : IRemoteStorage Constructors | Improve this Doc View Source S3SearchStorage(IConfiguration, S3Configuration) Declaration public S3SearchStorage(IConfiguration configuration, S3Configuration opts) Parameters Type Name Description Microsoft.Extensions.Configuration.IConfiguration configuration S3Configuration opts Properties | Improve this Doc View Source BucketName Declaration public string BucketName { get; } Property Value Type Description System.String Methods | Improve this Doc View Source GetFileAsync(VersionSpec) Declaration public Task<IFileSource> GetFileAsync(VersionSpec version) Parameters Type Name Description VersionSpec version Returns Type Description System.Threading.Tasks.Task<Downlink.Core.IFileSource> Implements IRemoteStorage.GetFileAsync(VersionSpec)"
  },
  "api/Downlink.Storage.LocalFileStorage.html": {
    "href": "api/Downlink.Storage.LocalFileStorage.html",
    "title": "Class LocalFileStorage | Downlink",
    "keywords": "Class LocalFileStorage Inheritance System.Object LocalFileStorage Namespace : Downlink.Storage Assembly : Downlink.dll Syntax public class LocalFileStorage : object, IRemoteStorage Constructors | Improve this Doc View Source LocalFileStorage(IConfiguration, ILogger<LocalFileStorage>) Declaration public LocalFileStorage(IConfiguration configuration, ILogger<LocalFileStorage> logger) Parameters Type Name Description IConfiguration configuration ILogger<Downlink.Storage.LocalFileStorage> logger Methods | Improve this Doc View Source GetFileAsync(VersionSpec) Declaration public Task<IFileSource> GetFileAsync(VersionSpec version) Parameters Type Name Description VersionSpec version Returns Type Description Task<Downlink.Core.IFileSource>"
  },
  "api/Downlink.Storage.NoneStorage.html": {
    "href": "api/Downlink.Storage.NoneStorage.html",
    "title": "Class NoneStorage | Downlink",
    "keywords": "Class NoneStorage Inheritance System.Object NoneStorage Namespace : Downlink.Storage Assembly : Downlink.dll Syntax public class NoneStorage : object, IRemoteStorage Constructors | Improve this Doc View Source NoneStorage(ILogger<NoneStorage>) Declaration public NoneStorage(ILogger<NoneStorage> logger) Parameters Type Name Description ILogger<Downlink.Storage.NoneStorage> logger Methods | Improve this Doc View Source GetFileAsync(VersionSpec) Declaration public Task<IFileSource> GetFileAsync(VersionSpec version) Parameters Type Name Description VersionSpec version Returns Type Description Task<Downlink.Core.IFileSource>"
  },
  "api/Downlink.Core.IStreamingStorage.html": {
    "href": "api/Downlink.Core.IStreamingStorage.html",
    "title": "Interface IStreamingStorage | Downlink",
    "keywords": "Interface IStreamingStorage Namespace : Downlink.Core Assembly : Downlink.Core.dll Syntax public interface IStreamingStorage Methods | Improve this Doc View Source GetFile(VersionSpec) Declaration IFileSource GetFile(VersionSpec version) Parameters Type Name Description VersionSpec version Returns Type Description IFileSource | Improve this Doc View Source GetFileContents(VersionSpec) Declaration Stream GetFileContents(VersionSpec version) Parameters Type Name Description VersionSpec version Returns Type Description System.IO.Stream"
  },
  "api/Downlink.Core.Runtime.HierarchicalPatternMatcher.html": {
    "href": "api/Downlink.Core.Runtime.HierarchicalPatternMatcher.html",
    "title": "Class HierarchicalPatternMatcher | Downlink",
    "keywords": "Class HierarchicalPatternMatcher Inheritance System.Object HierarchicalPatternMatcher Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Downlink.Core.Runtime Assembly : Downlink.Core.dll Syntax public class HierarchicalPatternMatcher : IPatternMatcher Constructors | Improve this Doc View Source HierarchicalPatternMatcher(Boolean) Declaration public HierarchicalPatternMatcher(bool forceNameMatching = false) Parameters Type Name Description System.Boolean forceNameMatching Properties | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description System.String Implements IPatternMatcher.Name Methods | Improve this Doc View Source Match(Path, VersionSpec) Declaration public bool Match(Path path, VersionSpec version) Parameters Type Name Description Path path VersionSpec version Returns Type Description System.Boolean Implements IPatternMatcher.Match(Path, VersionSpec)"
  },
  "api/Downlink.Core.html": {
    "href": "api/Downlink.Core.html",
    "title": "Namespace Downlink.Core | Downlink",
    "keywords": "Namespace Downlink.Core Classes FileMetadata MatchStrategyExtensions VersionSpec Interfaces IFileSource IMatchStrategy<TObject> IPatternMatcher IRemoteStorage IStreamingStorage"
  },
  "api/Downlink.GitHub.ConfigurationExtensions.html": {
    "href": "api/Downlink.GitHub.ConfigurationExtensions.html",
    "title": "Class ConfigurationExtensions | Downlink",
    "keywords": "Class ConfigurationExtensions Inheritance System.Object ConfigurationExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Downlink.GitHub Assembly : Downlink.GitHub.dll Syntax public static class ConfigurationExtensions"
  },
  "api/Downlink.GitHub.ServiceCollectionExtensions.html": {
    "href": "api/Downlink.GitHub.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions | Downlink",
    "keywords": "Class ServiceCollectionExtensions Inheritance System.Object ServiceCollectionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Downlink.GitHub Assembly : Downlink.GitHub.dll Syntax public static class ServiceCollectionExtensions Methods | Improve this Doc View Source AddGitHubReleaseStorage(IServiceCollection) Declaration public static IServiceCollection AddGitHubReleaseStorage(this IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection"
  },
  "api/Downlink.GitHub.html": {
    "href": "api/Downlink.GitHub.html",
    "title": "Namespace Downlink.GitHub | Downlink",
    "keywords": "Namespace Downlink.GitHub Classes ConfigurationExtensions CredentialFactory FlatMatchStrategy GitHubCredentials GitHubFileSource GitHubMatchStrategy OctokitClient ServiceCollectionExtensions Interfaces IGitHubClient"
  },
  "api/Downlink.Handlers.ResponseHandler.html": {
    "href": "api/Downlink.Handlers.ResponseHandler.html",
    "title": "Class ResponseHandler | Downlink",
    "keywords": "Class ResponseHandler Inheritance System.Object ResponseHandler ProxyingResponseHandler RedirectingResponseHandler Namespace : Downlink.Handlers Assembly : Downlink.dll Syntax public abstract class ResponseHandler : object, IResponseHandler Constructors | Improve this Doc View Source ResponseHandler(IEnumerable<ISchemeClient>) Declaration protected ResponseHandler(IEnumerable<ISchemeClient> additionalClients) Parameters Type Name Description IEnumerable<Downlink.Handlers.ISchemeClient> additionalClients Properties | Improve this Doc View Source AdditionalClients Declaration protected IEnumerable<ISchemeClient> AdditionalClients { get; } Property Value Type Description IEnumerable<Downlink.Handlers.ISchemeClient> Methods | Improve this Doc View Source HandleAsync(IFileSource) Declaration public abstract Task<IActionResult> HandleAsync(IFileSource file) Parameters Type Name Description IFileSource file Returns Type Description Task<IActionResult> Implements IResponseHandler.HandleAsync(IFileSource) | Improve this Doc View Source HandleUnknownAsync(IFileSource) Declaration protected Task<IActionResult> HandleUnknownAsync(IFileSource file) Parameters Type Name Description IFileSource file Returns Type Description Task<IActionResult>"
  },
  "api/Downlink.Handlers.SchemeClient.html": {
    "href": "api/Downlink.Handlers.SchemeClient.html",
    "title": "Class SchemeClient | Downlink",
    "keywords": "Class SchemeClient Inheritance System.Object SchemeClient FileSchemeClient HttpDownloadClient Namespace : Downlink.Handlers Assembly : Downlink.dll Syntax public abstract class SchemeClient : object, ISchemeClient Constructors | Improve this Doc View Source SchemeClient(IEnumerable<String>) Declaration protected SchemeClient(IEnumerable<string> schemes) Parameters Type Name Description IEnumerable<System.String> schemes | Improve this Doc View Source SchemeClient(String) Declaration protected SchemeClient(string scheme) Parameters Type Name Description System.String scheme Properties | Improve this Doc View Source Schemes Declaration public IEnumerable<string> Schemes { get; } Property Value Type Description IEnumerable<System.String> Implements ISchemeClient.Schemes Methods | Improve this Doc View Source GetContentAsync(IFileSource) Declaration public abstract Task<IActionResult> GetContentAsync(IFileSource file) Parameters Type Name Description IFileSource file Returns Type Description Task<IActionResult> Implements ISchemeClient.GetContentAsync(IFileSource)"
  },
  "api/Downlink.Messaging.AppVersionResponseModel.html": {
    "href": "api/Downlink.Messaging.AppVersionResponseModel.html",
    "title": "Class AppVersionResponseModel | Downlink",
    "keywords": "Class AppVersionResponseModel Inheritance System.Object AppVersionResponseModel Namespace : Downlink.Messaging Assembly : Downlink.dll Syntax public class AppVersionResponseModel : object"
  },
  "api/Downlink.Messaging.html": {
    "href": "api/Downlink.Messaging.html",
    "title": "Namespace Downlink.Messaging | Downlink",
    "keywords": "Namespace Downlink.Messaging Classes AppVersionRequest AppVersionRequestHandler AppVersionResponseModel"
  },
  "api/Downlink.S3.S3Storage.html": {
    "href": "api/Downlink.S3.S3Storage.html",
    "title": "Class S3Storage | Downlink",
    "keywords": "Class S3Storage Inheritance System.Object S3Storage Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Downlink.S3 Assembly : Downlink.S3.dll Syntax public class S3Storage : IRemoteStorage Constructors | Improve this Doc View Source S3Storage(IConfiguration, S3Configuration, IEnumerable<IPatternMatcher>, IEnumerable<S3MatchStrategy>) Declaration public S3Storage(IConfiguration configuration, S3Configuration opts, IEnumerable<IPatternMatcher> patternMatchers, IEnumerable<S3MatchStrategy> strategies) Parameters Type Name Description Microsoft.Extensions.Configuration.IConfiguration configuration S3Configuration opts System.Collections.Generic.IEnumerable<Downlink.Core.IPatternMatcher> patternMatchers System.Collections.Generic.IEnumerable<Downlink.S3.S3MatchStrategy> strategies Properties | Improve this Doc View Source BucketName Declaration public string BucketName { get; } Property Value Type Description System.String Methods | Improve this Doc View Source GetFileAsync(VersionSpec) Declaration public Task<IFileSource> GetFileAsync(VersionSpec version) Parameters Type Name Description VersionSpec version Returns Type Description System.Threading.Tasks.Task<Downlink.Core.IFileSource> Implements IRemoteStorage.GetFileAsync(VersionSpec)"
  },
  "api/Downlink.S3.ServiceCollectionExtensions.html": {
    "href": "api/Downlink.S3.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions | Downlink",
    "keywords": "Class ServiceCollectionExtensions Inheritance System.Object ServiceCollectionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Downlink.S3 Assembly : Downlink.S3.dll Syntax public static class ServiceCollectionExtensions Methods | Improve this Doc View Source AddS3Storage(IServiceCollection) Declaration public static IServiceCollection AddS3Storage(this IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection"
  },
  "api/Downlink.Storage.ServiceCollectionExtensions.html": {
    "href": "api/Downlink.Storage.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions | Downlink",
    "keywords": "Class ServiceCollectionExtensions Inheritance System.Object ServiceCollectionExtensions Namespace : Downlink.Storage Assembly : Downlink.dll Syntax public static class ServiceCollectionExtensions : object Methods | Improve this Doc View Source AddFallbackStorage(IServiceCollection) Declaration public static IServiceCollection AddFallbackStorage(this IServiceCollection services) Parameters Type Name Description IServiceCollection services Returns Type Description IServiceCollection | Improve this Doc View Source AddLocalStorage(IServiceCollection) Declaration public static IServiceCollection AddLocalStorage(this IServiceCollection services) Parameters Type Name Description IServiceCollection services Returns Type Description IServiceCollection"
  },
  "api/Downlink.Storage.html": {
    "href": "api/Downlink.Storage.html",
    "title": "Namespace Downlink.Storage | Downlink",
    "keywords": "Namespace Downlink.Storage Classes LocalFileSource LocalFileStorage NoneStorage ServiceCollectionExtensions"
  },
  "api/Downlink.AzureStorage.AzureStorage.html": {
    "href": "api/Downlink.AzureStorage.AzureStorage.html",
    "title": "Class AzureStorage | Downlink",
    "keywords": "Class AzureStorage Inheritance System.Object AzureStorage Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Downlink.AzureStorage Assembly : Downlink.AzureStorage.dll Syntax public class AzureStorage : IRemoteStorage Constructors | Improve this Doc View Source AzureStorage(IConfiguration, ILogger<AzureStorage>, IEnumerable<IPatternMatcher>, IEnumerable<AzureMatchStrategy>) Declaration public AzureStorage(IConfiguration configuration, ILogger<AzureStorage> logger, IEnumerable<IPatternMatcher> matchers, IEnumerable<AzureMatchStrategy> strategies) Parameters Type Name Description Microsoft.Extensions.Configuration.IConfiguration configuration Microsoft.Extensions.Logging.ILogger<Downlink.AzureStorage.AzureStorage> logger System.Collections.Generic.IEnumerable<Downlink.Core.IPatternMatcher> matchers System.Collections.Generic.IEnumerable<Downlink.AzureStorage.Strategies.AzureMatchStrategy> strategies Properties | Improve this Doc View Source Account Declaration public CloudStorageAccount Account { get; } Property Value Type Description Microsoft.WindowsAzure.Storage.CloudStorageAccount | Improve this Doc View Source Client Declaration public CloudBlobClient Client { get; } Property Value Type Description Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient Methods | Improve this Doc View Source GetFileAsync(VersionSpec) Declaration public Task<IFileSource> GetFileAsync(VersionSpec version) Parameters Type Name Description VersionSpec version Returns Type Description System.Threading.Tasks.Task<Downlink.Core.IFileSource> Implements IRemoteStorage.GetFileAsync(VersionSpec)"
  },
  "api/Downlink.Core.IO.html": {
    "href": "api/Downlink.Core.IO.html",
    "title": "Namespace Downlink.Core.IO | Downlink",
    "keywords": "Namespace Downlink.Core.IO Classes Path"
  },
  "api/Downlink.Core.MatchStrategyExtensions.html": {
    "href": "api/Downlink.Core.MatchStrategyExtensions.html",
    "title": "Class MatchStrategyExtensions | Downlink",
    "keywords": "Class MatchStrategyExtensions Inheritance System.Object MatchStrategyExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Downlink.Core Assembly : Downlink.Core.dll Syntax public static class MatchStrategyExtensions Methods | Improve this Doc View Source GetFor(IEnumerable<IPatternMatcher>, String) Declaration public static IPatternMatcher GetFor(this IEnumerable<IPatternMatcher> patterns, string name) Parameters Type Name Description System.Collections.Generic.IEnumerable<Downlink.Core.IPatternMatcher> patterns System.String name Returns Type Description IPatternMatcher | Improve this Doc View Source GetFor<T, TObject>(IEnumerable<T>, String) Declaration public static T GetFor<T, TObject>(this IEnumerable<T> strategies, string name)where T : IMatchStrategy<TObject> where TObject : class Parameters Type Name Description System.Collections.Generic.IEnumerable<T> strategies System.String name Returns Type Description T Type Parameters Name Description T TObject"
  },
  "api/Downlink.Core.VersionSpec.html": {
    "href": "api/Downlink.Core.VersionSpec.html",
    "title": "Class VersionSpec | Downlink",
    "keywords": "Class VersionSpec Inheritance System.Object VersionSpec Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Downlink.Core Assembly : Downlink.Core.dll Syntax public class VersionSpec Constructors | Improve this Doc View Source VersionSpec(String, String, String) Declaration public VersionSpec(string version, string platform, string architecture) Parameters Type Name Description System.String version System.String platform System.String architecture Properties | Improve this Doc View Source Architecture Declaration public string Architecture { get; } Property Value Type Description System.String | Improve this Doc View Source IsStable Declaration public bool IsStable { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Platform Declaration public string Platform { get; } Property Value Type Description System.String | Improve this Doc View Source Summary Declaration public string Summary { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Operators | Improve this Doc View Source Implicit(VersionSpec to String) Declaration public static implicit operator string (VersionSpec v) Parameters Type Name Description VersionSpec v Returns Type Description System.String"
  },
  "api/Downlink.GitHub.GitHubFileSource.html": {
    "href": "api/Downlink.GitHub.GitHubFileSource.html",
    "title": "Class GitHubFileSource | Downlink",
    "keywords": "Class GitHubFileSource Inheritance System.Object GitHubFileSource Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Downlink.GitHub Assembly : Downlink.GitHub.dll Syntax public class GitHubFileSource : IFileSource Properties | Improve this Doc View Source Available Declaration public bool Available { get; set; } Property Value Type Description System.Boolean Implements IFileSource.Available | Improve this Doc View Source FileUri Declaration public Uri FileUri { get; } Property Value Type Description System.Uri Implements IFileSource.FileUri | Improve this Doc View Source Metadata Declaration public FileMetadata Metadata { get; } Property Value Type Description FileMetadata Implements IFileSource.Metadata | Improve this Doc View Source Version Declaration public VersionSpec Version { get; set; } Property Value Type Description VersionSpec Implements IFileSource.Version"
  },
  "api/Downlink.GitHub.GitHubMatchStrategy.html": {
    "href": "api/Downlink.GitHub.GitHubMatchStrategy.html",
    "title": "Class GitHubMatchStrategy | Downlink",
    "keywords": "Class GitHubMatchStrategy Inheritance System.Object GitHubMatchStrategy FlatMatchStrategy Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Downlink.GitHub Assembly : Downlink.GitHub.dll Syntax public abstract class GitHubMatchStrategy : IMatchStrategy<Octokit.Release> Constructors | Improve this Doc View Source GitHubMatchStrategy(String) Declaration protected GitHubMatchStrategy(string name) Parameters Type Name Description System.String name Properties | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description System.String Implements IMatchStrategy<TObject>.Name Methods | Improve this Doc View Source MatchAsync(IEnumerable<Release>, VersionSpec) Declaration public abstract Task<IFileSource> MatchAsync(IEnumerable<Release> items, VersionSpec version) Parameters Type Name Description System.Collections.Generic.IEnumerable<Release> items VersionSpec version Returns Type Description System.Threading.Tasks.Task<Downlink.Core.IFileSource>"
  },
  "api/Downlink.Handlers.ProxyingResponseHandler.html": {
    "href": "api/Downlink.Handlers.ProxyingResponseHandler.html",
    "title": "Class ProxyingResponseHandler | Downlink",
    "keywords": "Class ProxyingResponseHandler Inheritance System.Object ResponseHandler ProxyingResponseHandler Inherited Members ResponseHandler.AdditionalClients ResponseHandler.HandleUnknownAsync(IFileSource) Namespace : Downlink.Handlers Assembly : Downlink.dll Syntax public class ProxyingResponseHandler : ResponseHandler, IResponseHandler Constructors | Improve this Doc View Source ProxyingResponseHandler(IEnumerable<ISchemeClient>, ILogger<ProxyingResponseHandler>) Declaration public ProxyingResponseHandler(IEnumerable<ISchemeClient> clients, ILogger<ProxyingResponseHandler> logger) Parameters Type Name Description IEnumerable<Downlink.Handlers.ISchemeClient> clients ILogger<Downlink.Handlers.ProxyingResponseHandler> logger Methods | Improve this Doc View Source HandleAsync(IFileSource) Declaration public override Task<IActionResult> HandleAsync(IFileSource file) Parameters Type Name Description IFileSource file Returns Type Description Task<IActionResult> Overrides ResponseHandler.HandleAsync(IFileSource)"
  },
  "api/Downlink.Handlers.RedirectingResponseHandler.html": {
    "href": "api/Downlink.Handlers.RedirectingResponseHandler.html",
    "title": "Class RedirectingResponseHandler | Downlink",
    "keywords": "Class RedirectingResponseHandler Inheritance System.Object ResponseHandler RedirectingResponseHandler Inherited Members ResponseHandler.AdditionalClients ResponseHandler.HandleUnknownAsync(IFileSource) Namespace : Downlink.Handlers Assembly : Downlink.dll Syntax public class RedirectingResponseHandler : ResponseHandler, IResponseHandler Constructors | Improve this Doc View Source RedirectingResponseHandler(IEnumerable<ISchemeClient>) Declaration public RedirectingResponseHandler(IEnumerable<ISchemeClient> additionalClients) Parameters Type Name Description IEnumerable<Downlink.Handlers.ISchemeClient> additionalClients Methods | Improve this Doc View Source HandleAsync(IFileSource) Declaration public override Task<IActionResult> HandleAsync(IFileSource file) Parameters Type Name Description IFileSource file Returns Type Description Task<IActionResult> Overrides ResponseHandler.HandleAsync(IFileSource)"
  },
  "api/Downlink.Infrastructure.HttpClientExtensions.html": {
    "href": "api/Downlink.Infrastructure.HttpClientExtensions.html",
    "title": "Class HttpClientExtensions | Downlink",
    "keywords": "Class HttpClientExtensions Inheritance System.Object HttpClientExtensions Namespace : Downlink.Infrastructure Assembly : Downlink.dll Syntax public static class HttpClientExtensions : object Methods | Improve this Doc View Source ReadAsFileAsync(HttpContent, String, Boolean) Declaration public static Task ReadAsFileAsync(this HttpContent content, string filename, bool overwrite) Parameters Type Name Description HttpContent content System.String filename System.Boolean overwrite Returns Type Description Task"
  },
  "doc/configuration.html": {
    "href": "doc/configuration.html",
    "title": "Downlink Configuration | Downlink",
    "keywords": "Downlink Configuration Downlink is specifically designed to be easy to configure with your choice of source and format. Currently, Downlink supports configuration provided by files in either JSON or YAML format, or from environment variables (including in the Docker image). This means that the following are all interchangeable: Storage: GitHub GitHubStorage: Repository: agc93/downlink { \"Storage\": \"GitHub\", \"GitHubStorage\": { \"Repository\": \"agc93/downlink\" } } export DOWNLINK:Storage=GitHub export DOWNLINK:GitHubStorage:Repository=\"agc93/downlink\" # You can also use double-underscores export DOWNLINK__GitHubStorage__Repository=\"agc93/downlink\" Configuration Files When using JSON or YAML files, Downlink will automatically search a number of paths for suitable config files (note these are relative to the app directory): ./appsettings.json ./downlink.yml or ./downlink.json ./config.yml or ./config.json ./config/downlink.yml or ./config/downlink.json Environment variables Additionally, any environment variables that start with DOWNLINK_ , DOWNLINK__ or DOWNLINK: are automatically added to the configuration. These are especially useful when working with the Docker container Priority Note that since configuration is loaded sequentially, configuration values can be overriden. The order of loading is as follows: Configuration files: appsettings.json downlink.json / downlink.yml config.json / config.yml ./config/downlink.json / ./config/downlink.yml Environment Variables Command Line (if present) Tip It's recommended to use configuration files for more complex configuration (such as Azure connection strings and complex paths), but environment variables can be used to easily override simple settings."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "Downlink | Downlink",
    "keywords": "Downlink Browse through the source reference using the menu on the left. The developer guide can be found here ."
  },
  "doc/contributing.html": {
    "href": "doc/contributing.html",
    "title": "Contributing Guide | Downlink",
    "keywords": "Contributing Guide This is very much an active project so any and all contributions are welcome, even just finding issues! Reporting issues All issues should be tracked on GitHub , with enough information to reproduce the issue. Code Contributions This repository is based around the Git Flow workflow, using feature branches and pull requests to manage incoming changes and fixes. Generally speaking, the process can be summarised as follows: Find a change or fix you want to implement Fork the repo Create a new branch named feature/<your-feature-name> and make your changes Open a PR from your feature branch against the develop branch (include the GitHub issue number for fixes) Success! I will provide feedback if needed, or just accept the changes directly and they should appear in the next release Documentation This documentation should include an Improve this Doc button in the upper right. Click it to quickly jump to the source of the current documentation. You can then fork, branch and issue a PR just as with code contributions (see above). License Note that this project (and all contributions) fall under the MIT License terms."
  },
  "doc/developers.html": {
    "href": "doc/developers.html",
    "title": "Development Guide | Downlink",
    "keywords": "Development Guide Tip You can check the Developer Reference above for full API source reference, directly from the source code. Building Building this project is super-simple: run build.ps1 if you're on Windows, or build.sh if you're on Linux. To build the documentation, you may also need wkhtmltopdf installed. Packaging To do a complete build of the tool and build all packages, you will need to have Docker installed and available on your host (and accessible to the user running the build script). The build script will complete all the packaging steps in a series of Docker containers so this may be a slow process the first time you run it as the relevant images are pulled from the Hub. Introduction Downlink has a lot of moving parts, so the code base may appear quite daunting at first, but fear not! While there are a lot of individual components, they are mostly quite simple and a lot of the plumbing/boilerplate is already taken care of by framework code. Extension points Downlink does include some specifically designed extensions points, but the IRemoteStorage and ISchemeClient interfaces are the ones most developers will be interacting with, and are explained in more detail below. Storage Downlink is primarily a gateway which means the app artifacts must actually be stored on a remote backend. In Downlink, that backend is an implementation of the IRemoteStorage interface, a simple abstraction over any storage service. The IRemoteStorage interface is deliberately simplistic, relying on returning a single Uri for the requested version, or throwing an implementation of NotFoundException (from the Downlink.Core.Diagnostics namespace) if it can't find a match. Returning a Uri rather than the artifact itself enables Downlink's built-in proxying support allowing for end users to hit the storage backend directly, or to proxy everything through Downlink itself. Storage URIs Note that the Uri returned from an IRemoteStorage implementation can be any valid URI, and it will be passed directly to the response handler in Downlink itself (an IResponseHandler implementation). Out of the box, URIs with the 'http', 'https' or 'file' URIs are automatically handled and returned to the user. If Downlink doesn't know how to handle a URI scheme, it will return a 412 Precondition Failed status. To add support for another scheme (most often if you are also developing a new backend), you need to implement ISchemeClient . To make it easier, you can inherit from SchemeClient which takes out a bit of boilerplate. Your ISchemeClient implementation will need to return an IActionResult (just like a Controller action method), and that will be returned to the user. Note that your scheme client will only be invoked for the schemes it supports. Dependency Injection This app includes dependency injection support for most of the framework and app code. Simply include the types you need in your constructor, and the app will attempt to resolve this dependency from the DI container. Note this will only work where you have registered your types with the container (such as in Startup.cs )."
  },
  "doc/faq.html": {
    "href": "doc/faq.html",
    "title": "Frequently Asked Questions | Downlink",
    "keywords": "Frequently Asked Questions <!-- content-here --> But, why? In short, because I wanted to. Downlink was designed and built as a simple distribution mechanism for tools like Git Profile Manager where there may be a lot of binaries, versions and packages available. Since \"storing files\" is one of the few things \"the cloud\" has actually worked out, Downlink serves as an abstraction over them, so you can continue to use GitHub releases or Azure Storage or S3 buckets etc, while making links stable, predictable and agnostic to the underlying storage. Essentially, you can give your users links and never worry about things like website migrations breaking your download links. Is it SEO friendly? Not even close. Downlink is much closer to an API gateway than a web app and (at this time) doesn't even include a UI. As such, it's not good for SEO since it mostly just redirects to other locations anyway. You should make your website SEO friendly and let Downlink do the one thing it's good at: predictable, stable download links. Why can't I just download the 'latest' version? Because what defines \"latest\"? We could use the most recently uploaded, but now users might get hotfixes instead of new versions? Or serve based on version numbers, but then Downlink needs to be opinionated about how you version your app. As it is, this is considered a bit too heavy-handed and isn't natively supported. Note that for Azure Storage and S3 backends, you can always just create a version folder named latest and Downlink will happily serve it up. What platforms are supported? Downlink is built with ASP.NET Core meaning it can be run essentially anywhere .NET Core is supported. That being said, at this time, there are no pre-built platform packages available so the Docker image is still the recommended way to get started. But I already use GitHub releases! Then keep doing so! Downlink doesn't replace things like GitHub releases, it merely serves as an API over the top of them. That means you can run still use GitHub to publish your releases, and if you follow our conventions Downlink will pick up straight from your existing and new releases. If you use Downlink, you don't have to continue using GitHub Releases for ever! It also means you can rename your repository/organisation or change away from GitHub all together without breaking the download links."
  },
  "doc/getting-started.html": {
    "href": "doc/getting-started.html",
    "title": "Getting Started with Downlink | Downlink",
    "keywords": "Getting Started with Downlink To get started quickly with Downlink, use the Docker image. Once you've got Docker set up and working, you can get started very quickly with Downlink and use the powerful configuration to easily control the behaviour. As an example of how easy Downlink is to get started, we're going to set up a Downlink container to serve releases for the Hugo static site generator. Currently, their \"Download\" link just sends you to the GitHub Releases page for the hugo repository , so we can easily put Downlink in front of these using the GitHub Releases backend . First, create a config file using either YAML or JSON. For config.yml : Storage: GitHub GitHubStorage: Repository: gohugoio/hugo SplitCharacters: - '_' - '-' or for config.json : { \"Storage\": \"GitHub\", \"GitHubStorage\": { \"Repository\": \"gohugoio/hugo\", \"SplitCharacters\": [\"_\", \"-\"] } } Note We need the extra SplitCharacters configuration as Hugo names their packages with a mix of _ and - characters. Now, from a command line, run the Downlink container: docker run -it --rm -p 80:80 -v $PWD/config.yml:/downlink/config.yml agc93/downlink:latest # or for JSON docker run -it --rm -p 80:80 -v $PWD/config.json:/downlink/config.json agc93/downlink:latest The new container will start, the configuration loader will read in your new configuration file and automatically add the GitHub Releases backend, pointing at the gohugoio/hugo repository's releases. That's it! You're now running Downlink. To prove it's working, on your PC, browse to http://localhost/v0.24.1/Windows/64bit and watch as your browser automatically downloads the 64-bit Windows release of v0.24.1 of Hugo from GitHub. Tip You can verify this by checking the Network tab of your browser's developer tools, or using curl / wget You can try again with http://localhost/v0.23/macOS/32bit or http://localhost/v0.22.1/OpenBSD/64bit to get the relevant files for other versions, platforms, or architectures. Want to stop the redirecting and download straight from Downlink? Easy! Stop the container using Ctrl-C (it will be automatically removed), and run again, this time providing an extra configuration key from an environment variable: docker run -it --rm -p 80:80 -v $PWD/config.yml:/downlink/config.yml -e DOWNLINK:ProxyRemoteFiles=true agc93/downlink:latest # or for JSON docker run -it --rm -p 80:80 -v $PWD/config.json:/downlink/config.json -e DOWNLINK:ProxyRemoteFiles=true agc93/downlink:latest Note that extra -e argument? That adds the ProxyRemoteFiles variable to your Downlink configuration (and sets it to true ). Downlink will now automatically proxy remote files (from whatever storage backend you chose) and serve it back to the user directly from Downlink. Again, browse to the same address as earlier and you should receive the binary download, no redirect required! Tip You can mix and match configuration! You could add ProxyRemoteFiles to your YAML/JSON configuration file, or recreate the whole config file in environment variables, or anything in between. Notice how we didn't change a single thing about Hugo's downloads or releases? But now we can easily link directly to any version, platform or architecture. That's what Downlink is about!"
  },
  "doc/intro.html": {
    "href": "doc/intro.html",
    "title": "Downlink | Downlink",
    "keywords": "Downlink Introduction Downlink is a simple API used to create predictable, stable and consistent download links for software releases/projects. In short, Downlink lets you give a link to your end user like http://myapp.com/v1.2/windows/x64 and Downlink will return version 1.2 of your app for 64-bit Windows, regardless of where your app binaries/packages/installers/images/artifacts are actually stored. Downlink is an abstraction over your chosen release storage platform so your links are always dependable and predictable, even if you (or your chosen platform) changes how you store your app. Out of the box, Downlink supports serving packages from GitHub Releases (with a naming convention), Azure Storage, AWS S3 Storage, or the local filesystem of the Downlink server. Technology Downlink is built entirely using ASP.NET Core and is supported on Windows, Linux and macOS, including a pre-built Docker image. Getting Started To get started, check out the getting started guide for a quick demo, or check out the FAQ for common questions. Contributing This application is completely open-source and is published on GitHub . To get started contributing, check out the contributing guide and the developer guide ."
  },
  "doc/matching.html": {
    "href": "doc/matching.html",
    "title": "Version Matching | Downlink",
    "keywords": "Version Matching The process for going from a request, like /v1.2/windows/x64 to an actual file on your storage backend we refer to as \"version matching\". There's two methods of version matching that depends on your choice of backend: Match Strategies Each backend can make use of a match strategy to match a version request to a specific file on the backend. These match strategies are the more advanced method of version matching, but are also not portable between backends as they use the respective backends' underlying storage types. Currently, Downlink doesn't use many match strategies, but they are very helpful for extending and customising. Pattern Matchers Pattern matching is the much simpler alternative to match strategies, but has the benefit of being backend-agnostic, since it abstracts the domain-specific objects (i.e. release assets, block blobs etc) into a \"path\" that gets run through the pattern matcher. The first match is returned to the user. The main exception is the GitHub backend, which supports only the convention-driven GitHub-specific Flat strategy at this time. Compatibility Backend Azure AWS S3 GitHub Flat ✅ ✅ ✅* Hierarchical ✅ ✅ ❌ FlatVersion ✅ ✅ ❌ FlatPlatform ✅ ✅ ❌ Search ❌ ✅ ❌ Configuration As outlined in the individual backend's documentation, the convention is to use a MatchStrategy configuration key under the respective backend's section to control the version matching in use: { \"AzureStorage\": { \"MatchStrategy\": \"Hierarchical\" }, \"AWS\": { \"MatchStrategy\": \"FlatVersion\" } } AzureStorage: MatchStrategy: 'Hierarchical' AWS: MatchStrategy: 'FlatPlatform'"
  },
  "doc/storage-az.html": {
    "href": "doc/storage-az.html",
    "title": "Azure Storage for Downlink | Downlink",
    "keywords": "Azure Storage for Downlink The Downlink.AzureStorage library (bundled with Downlink) adds support for Azure Storage as a remote storage backend. Activating the Azure Storage backend Check the configuration guide for full details You can quickly enable the Azure Storage backend by setting the Storage configuration key to \"Azure\" or \"AzureStorage\". This will invoke the AddAzureStorage() method and add Azure Storage to your application. Configuration The Azure Storage backend requires two things be added to your app configuration (i.e. downlink.json or downlink.yml ): the connection string used for your Azure Storage account, and the name of the container to retrieve from. Connection String { \"ConnectionStrings\": { \"AzureStorage\": \"DefaultEndpointsProtocol=https;AccountName=storagesample;AccountKey=<account-key>+\" }, } ConnectionStrings : AzureStorage: 'DefaultEndpointsProtocol=https;AccountName=storagesample;AccountKey=<account-key>+' Follow the instructions in the official documentation to get your connection string. Container Name { \"AzureStorage\": { \"Container\": \"container-name-here\" } } AzureStorage: Container: 'container-name-here' How it works Much like the S3 backend , the Azure Storage backend relies on hierarchical storage of app artifacts, and defaults to using the container-name/version/platform/architecture form. For example: # Path inside container /v1.2/windows/x64/myapp.msi Will be resolved for the /v1.2/windows/x64 path. Note that this mode requires each \"directory\" to contain only one file (Downlink will just return the first file in the matching directory). Alternate modes You can also provide the MatchStrategy option under AzureStorage configuration to control the matching behaviour. Using FlatVersion results in a request for /v1.2/windows/x64 being mapped to the /v1.2 directory in the container, and the first file with windows and x64 in the name will be returned. Likewise, FlatPlatform will use the same method for the first file in the /windows directory. Finally the Flat strategy just matches all files in the top level of the container against all three properties, and is not recommended if at all possible. The default behaviour can be specified using the Hierarchical strategy config Force Name Matching Set the AzureStorage/ForceNameMatching option to true to also force any matches to include the requested version in the file name. This is useful if you have more than one file in the target folder (such as metadata etc)."
  },
  "doc/storage-gh.html": {
    "href": "doc/storage-gh.html",
    "title": "GitHub Release Storage for Downlink | Downlink",
    "keywords": "GitHub Release Storage for Downlink The Downlink.GitHub library (bundled with Downlink) adds support for GitHub releases as a remote storage backend. Activating the GitHub Release backend Check the configuration guide for full details You can quickly enable the GitHub Release backend by setting the Storage configuration key to \"GitHub\". This will invoke the AddGitHubReleaseStorage() method and add GitHub Release-backed storage to your application. Configuration The GitHub Release backend requires some configuration for the repository to use, and optionally for GitHub Enterprise. The backend defaults to using GitHub.com, but providing a ServerUrl configuration key will use GitHub Enterprise instead. { \"GitHubStorage\": { \"Repository\": \"agc93/downlink\" } } GitHubStorage: Repository: 'agc93/downlink' ServerUrl: 'https://github.myenterprise.com' How it works The GitHub Release backend is quite unique from other currently supported backends in not having any notion of folders or hierarchy, since it uses the assets attached to a given release. Due to this, it relies on naming conventions in asset files to work correctly. For example, for an app name ' myapp ', a request to /v1.2/windows/x64 would search for an asset named myapp_v1.2_windows_x64.exe , or equivalent. The important parts are that segments are separated by an underscore ( _ ) and only the first segment is ignored. As such, the following two URLs are functionally equivalent: my-awesome-app-with-features-and-things_v1_macos_x64.app myapp_v1_macos_x64.app while the following are different: my-awesome-app_v2_macos_x64.app -> /v2/macos/x64 my-awesome-app_patch_macos_x64.app -> /patch/macos/x64 You can also change what character Downlink uses to parse the release name by using the GitHubStorage/SplitCharacters configuration key: { \"GitHubStorage\": { \"SplitCharacters\": [ \"_\", \"-\" ] } } GitHubStorage: SplitCharacters: - '-' - '_' Remember that as with any other backends, the easiest way to 'skip' a field, such as when you are only building for one architecture, is to use a single value like any or default . Alternate modes You can also provide the MatchStrategy option under GitHubStorage configuration to control the matching behaviour. Note that due to the limited nature of GitHub Releases, it is recommended to not change the version matching method unless absolutely required, as even the flat matching documented here is adjusted for GitHub compared to other backends."
  },
  "doc/storage-s3.html": {
    "href": "doc/storage-s3.html",
    "title": "AWS S3 Storage for Downlink | Downlink",
    "keywords": "AWS S3 Storage for Downlink The Downlink.S3 library (bundled with Downlink) adds support for AWS S3 as a remote storage backend. Activating the AWS S3 backend Check the configuration guide for full details You can quickly enable the AWS S3 backend by setting the Storage configuration key to \"AWS\" or \"S3\". This will invoke the AddS3Storage() method and add AWS S3 Storage to your application. Configuration The AWS S3 backend requires configuration for the credential profile and bucket name you want to use to be added to your app configuration (i.e. downlink.json or downlink.yml ). { \"AWS\": { \"Profile\": \"local-creds-profile\", \"Region\": \"us-west-2\", \"Bucket\": \"downlink\" }, } AWS: Profile: 'local-test-profile' Region: 'us-west-2' Bucket: 'downlink' How it works Much like the Azure backend , the S3 backend uses hierarchical storage of app artifacts, and defaults to using the container-name/version/platform/architecture form. For example: # Path inside bucket /v1.2/windows/x64/myapp.msi Will be resolved for the /v1.2/windows/x64 path. Note that this mode requires each \"directory\" to contain only one file (Downlink will just return the first file in the matching directory). Alternate modes You can also provide the MatchStrategy option under AWS configuration to control the matching behaviour. Using FlatVersion results in a request for /v1.2/windows/x64 being mapped to the /v1.2 directory in the container, and the first file with windows and x64 in the name will be returned. Likewise, FlatPlatform will use the same method for the first file in the /windows directory. Finally the Flat strategy just matches all files in the top level of the container against all three properties, and is not recommended if at all possible. The default behaviour can be specified using the Search strategy config Force Name Matching Set the AWS/ForceNameMatching option to true to also force any matches to include the requested version in the file name. This is useful if you have more than one file in the target folder (such as metadata etc)."
  },
  "index.html": {
    "href": "index.html",
    "title": "Git Profile Manager | Downlink",
    "keywords": "Git Profile Manager Introduction Git Profile Manager is a simple command line application to manage \"profiles\" for common Git configurations. For example, if you contribute to multiple repositories or teams and are often needing to change repository-specific (or global) addresses or options. Using this documentation: Click the tabs at the top of the page to navigate: User Documentation : General documentation Developer Reference : Full API documentation for developers"
  },
  "api/Downlink.AzureStorage.ServiceCollectionExtensions.html": {
    "href": "api/Downlink.AzureStorage.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions | Downlink",
    "keywords": "Class ServiceCollectionExtensions Inheritance System.Object ServiceCollectionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Downlink.AzureStorage Assembly : Downlink.AzureStorage.dll Syntax public static class ServiceCollectionExtensions Methods | Improve this Doc View Source AddAzureMatchStrategies(IServiceCollection) Declaration public static IServiceCollection AddAzureMatchStrategies(this IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection | Improve this Doc View Source AddAzureStorage(IServiceCollection) Declaration public static IServiceCollection AddAzureStorage(this IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection"
  },
  "api/Downlink.AzureStorage.Strategies.html": {
    "href": "api/Downlink.AzureStorage.Strategies.html",
    "title": "Namespace Downlink.AzureStorage.Strategies | Downlink",
    "keywords": "Namespace Downlink.AzureStorage.Strategies Classes AzureMatchStrategy"
  },
  "api/Downlink.Controllers.ApiController.html": {
    "href": "api/Downlink.Controllers.ApiController.html",
    "title": "Class ApiController | Downlink",
    "keywords": "Class ApiController Inheritance System.Object ApiController DownlinkController Namespace : Downlink.Controllers Assembly : Downlink.dll Syntax public class ApiController : Controller Constructors | Improve this Doc View Source ApiController(IMediator) Declaration protected ApiController(IMediator mediator) Parameters Type Name Description IMediator mediator Properties | Improve this Doc View Source Mediator Declaration protected IMediator Mediator { get; } Property Value Type Description IMediator Methods | Improve this Doc View Source Gone() Declaration protected IActionResult Gone() Returns Type Description IActionResult"
  },
  "api/Downlink.Core.Diagnostics.NotFoundException.html": {
    "href": "api/Downlink.Core.Diagnostics.NotFoundException.html",
    "title": "Class NotFoundException | Downlink",
    "keywords": "Class NotFoundException Inheritance System.Object System.Exception NotFoundException ArchitectureNotFoundException PlatformNotFoundException VersionNotFoundException Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Downlink.Core.Diagnostics Assembly : Downlink.Core.dll Syntax public abstract class NotFoundException : Exception Constructors | Improve this Doc View Source NotFoundException() Declaration protected NotFoundException() | Improve this Doc View Source NotFoundException(Serialization.SerializationInfo, Serialization.StreamingContext) Declaration protected NotFoundException(Serialization.SerializationInfo info, Serialization.StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info System.Runtime.Serialization.StreamingContext context | Improve this Doc View Source NotFoundException(String) Declaration protected NotFoundException(string message) Parameters Type Name Description System.String message | Improve this Doc View Source NotFoundException(String, Exception) Declaration protected NotFoundException(string message, Exception inner) Parameters Type Name Description System.String message System.Exception inner"
  },
  "api/Downlink.Core.Diagnostics.html": {
    "href": "api/Downlink.Core.Diagnostics.html",
    "title": "Namespace Downlink.Core.Diagnostics | Downlink",
    "keywords": "Namespace Downlink.Core.Diagnostics Classes ArchitectureNotFoundException NotFoundException PlatformNotFoundException VersionNotFoundException VersionParseException"
  },
  "api/Downlink.Core.IO.Path.html": {
    "href": "api/Downlink.Core.IO.Path.html",
    "title": "Class Path | Downlink",
    "keywords": "Class Path Inheritance System.Object Path Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Downlink.Core.IO Assembly : Downlink.Core.dll Syntax public class Path Constructors | Improve this Doc View Source Path(String) Initializes a new instance of the Path class. Declaration protected Path(string path) Parameters Type Name Description System.String path The path. Properties | Improve this Doc View Source FullPath Gets the full path. Declaration public string FullPath { get; } Property Value Type Description System.String The full path. | Improve this Doc View Source IsRelative Gets a value indicating whether this path is relative. Declaration public bool IsRelative { get; } Property Value Type Description System.Boolean true if this path is relative; otherwise, false . | Improve this Doc View Source Segments Gets the segments making up the path. Declaration public string[] Segments { get; } Property Value Type Description System.String[] The segments making up the path. Methods | Improve this Doc View Source Collapse() Collapses a Path containing ellipses. Declaration public Path Collapse() Returns Type Description Path A collapsed Path . | Improve this Doc View Source GetDirectory() Gets the directory part of the path. Declaration public Path GetDirectory() Returns Type Description Path The directory part of the path. | Improve this Doc View Source GetFilename() Gets the filename. Declaration public string GetFilename() Returns Type Description System.String The filename. | Improve this Doc View Source GetFilenameWithoutExtension() Gets the filename without its extension. Declaration public Path GetFilenameWithoutExtension() Returns Type Description Path The filename without its extension. | Improve this Doc View Source Normalize() Declaration public void Normalize() | Improve this Doc View Source ToString() Returns a System.String that represents this path. Declaration public override string ToString() Returns Type Description System.String A System.String that represents this instance. Overrides System.Object.ToString() Operators | Improve this Doc View Source Implicit(Path to String) Declaration public static implicit operator string (Path p) Parameters Type Name Description Path p Returns Type Description System.String | Improve this Doc View Source Implicit(String to Path) Performs an implicit conversion from System.String to Path . Declaration public static implicit operator Path(string path) Parameters Type Name Description System.String path The path. Returns Type Description Path A Path ."
  },
  "api/Downlink.BuilderExtensions.html": {
    "href": "api/Downlink.BuilderExtensions.html",
    "title": "Class BuilderExtensions | Downlink",
    "keywords": "Class BuilderExtensions Inheritance System.Object BuilderExtensions Namespace : Downlink Assembly : Downlink.dll Syntax public static class BuilderExtensions : object Methods | Improve this Doc View Source AddConfigFile(IConfigurationBuilder, String) Declaration public static IConfigurationBuilder AddConfigFile(this IConfigurationBuilder config, string fileName) Parameters Type Name Description IConfigurationBuilder config System.String fileName Returns Type Description IConfigurationBuilder | Improve this Doc View Source ConfigureAppConfiguration(IWebHostBuilder, String[]) Declaration public static IWebHostBuilder ConfigureAppConfiguration(this IWebHostBuilder builder, string[] args) Parameters Type Name Description IWebHostBuilder builder System.String[] args Returns Type Description IWebHostBuilder | Improve this Doc View Source ConfigureLogging(IWebHostBuilder) Declaration public static IWebHostBuilder ConfigureLogging(this IWebHostBuilder builder) Parameters Type Name Description IWebHostBuilder builder Returns Type Description IWebHostBuilder"
  },
  "api/Downlink.Controllers.ApiController.GoneResult.html": {
    "href": "api/Downlink.Controllers.ApiController.GoneResult.html",
    "title": "Class ApiController.GoneResult | Downlink",
    "keywords": "Class ApiController.GoneResult Inheritance System.Object ApiController.GoneResult Namespace : Downlink.Controllers Assembly : Downlink.dll Syntax protected class GoneResult : IActionResult Methods | Improve this Doc View Source ExecuteResultAsync(ActionContext) Declaration public Task ExecuteResultAsync(ActionContext context) Parameters Type Name Description ActionContext context Returns Type Description Task"
  },
  "api/Downlink.Core.Diagnostics.ArchitectureNotFoundException.html": {
    "href": "api/Downlink.Core.Diagnostics.ArchitectureNotFoundException.html",
    "title": "Class ArchitectureNotFoundException | Downlink",
    "keywords": "Class ArchitectureNotFoundException Inheritance System.Object System.Exception NotFoundException ArchitectureNotFoundException Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Downlink.Core.Diagnostics Assembly : Downlink.Core.dll Syntax public class ArchitectureNotFoundException : NotFoundException Constructors | Improve this Doc View Source ArchitectureNotFoundException() Declaration public ArchitectureNotFoundException() | Improve this Doc View Source ArchitectureNotFoundException(Serialization.SerializationInfo, Serialization.StreamingContext) Declaration protected ArchitectureNotFoundException(Serialization.SerializationInfo info, Serialization.StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info System.Runtime.Serialization.StreamingContext context | Improve this Doc View Source ArchitectureNotFoundException(String) Declaration public ArchitectureNotFoundException(string message) Parameters Type Name Description System.String message | Improve this Doc View Source ArchitectureNotFoundException(String, Exception) Declaration public ArchitectureNotFoundException(string message, Exception inner) Parameters Type Name Description System.String message System.Exception inner"
  },
  "api/Downlink.Core.Diagnostics.VersionParseException.html": {
    "href": "api/Downlink.Core.Diagnostics.VersionParseException.html",
    "title": "Class VersionParseException | Downlink",
    "keywords": "Class VersionParseException Inheritance System.Object System.Exception VersionParseException Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Downlink.Core.Diagnostics Assembly : Downlink.Core.dll Syntax public class VersionParseException : Exception Constructors | Improve this Doc View Source VersionParseException() Declaration public VersionParseException() | Improve this Doc View Source VersionParseException(Serialization.SerializationInfo, Serialization.StreamingContext) Declaration protected VersionParseException(Serialization.SerializationInfo info, Serialization.StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info System.Runtime.Serialization.StreamingContext context | Improve this Doc View Source VersionParseException(String) Declaration public VersionParseException(string message) Parameters Type Name Description System.String message | Improve this Doc View Source VersionParseException(String, Exception) Declaration public VersionParseException(string message, Exception inner) Parameters Type Name Description System.String message System.Exception inner"
  },
  "api/Downlink.Core.IFileSource.html": {
    "href": "api/Downlink.Core.IFileSource.html",
    "title": "Interface IFileSource | Downlink",
    "keywords": "Interface IFileSource Namespace : Downlink.Core Assembly : Downlink.Core.dll Syntax public interface IFileSource Properties | Improve this Doc View Source Available Declaration bool Available { get; } Property Value Type Description System.Boolean | Improve this Doc View Source FileUri Declaration Uri FileUri { get; } Property Value Type Description System.Uri | Improve this Doc View Source Metadata Declaration FileMetadata Metadata { get; } Property Value Type Description FileMetadata | Improve this Doc View Source Version Declaration VersionSpec Version { get; } Property Value Type Description VersionSpec"
  },
  "api/Downlink.Core.IPatternMatcher.html": {
    "href": "api/Downlink.Core.IPatternMatcher.html",
    "title": "Interface IPatternMatcher | Downlink",
    "keywords": "Interface IPatternMatcher Namespace : Downlink.Core Assembly : Downlink.Core.dll Syntax public interface IPatternMatcher Properties | Improve this Doc View Source Name Declaration string Name { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Match(Path, VersionSpec) Declaration bool Match(Path path, VersionSpec version) Parameters Type Name Description Path path VersionSpec version Returns Type Description System.Boolean"
  },
  "api/Downlink.Core.Runtime.FlatPatternMatcher.html": {
    "href": "api/Downlink.Core.Runtime.FlatPatternMatcher.html",
    "title": "Class FlatPatternMatcher | Downlink",
    "keywords": "Class FlatPatternMatcher Inheritance System.Object FlatPatternMatcher Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Downlink.Core.Runtime Assembly : Downlink.Core.dll Syntax public class FlatPatternMatcher : IPatternMatcher Properties | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description System.String Implements IPatternMatcher.Name Methods | Improve this Doc View Source Match(Path, VersionSpec) Declaration public bool Match(Path path, VersionSpec version) Parameters Type Name Description Path path VersionSpec version Returns Type Description System.Boolean Implements IPatternMatcher.Match(Path, VersionSpec)"
  },
  "api/Downlink.GitHub.FlatMatchStrategy.html": {
    "href": "api/Downlink.GitHub.FlatMatchStrategy.html",
    "title": "Class FlatMatchStrategy | Downlink",
    "keywords": "Class FlatMatchStrategy Inheritance System.Object GitHubMatchStrategy FlatMatchStrategy Inherited Members GitHubMatchStrategy.Name System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Downlink.GitHub Assembly : Downlink.GitHub.dll Syntax public class FlatMatchStrategy : GitHubMatchStrategy, IMatchStrategy<Octokit.Release> Constructors | Improve this Doc View Source FlatMatchStrategy(IConfiguration, ILogger<FlatMatchStrategy>) Declaration public FlatMatchStrategy(IConfiguration config, ILogger<FlatMatchStrategy> logger) Parameters Type Name Description Microsoft.Extensions.Configuration.IConfiguration config Microsoft.Extensions.Logging.ILogger<Downlink.GitHub.FlatMatchStrategy> logger Methods | Improve this Doc View Source MatchAsync(IEnumerable<Release>, VersionSpec) Declaration public override Task<IFileSource> MatchAsync(IEnumerable<Release> releases, VersionSpec version) Parameters Type Name Description System.Collections.Generic.IEnumerable<Release> releases VersionSpec version Returns Type Description System.Threading.Tasks.Task<Downlink.Core.IFileSource> Overrides GitHubMatchStrategy.MatchAsync(IEnumerable<Release>, VersionSpec)"
  }
}